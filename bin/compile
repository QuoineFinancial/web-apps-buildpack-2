#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail immediately on non-zero exit code.
set -e
# Fail immediately on non-zero exit code within a pipeline.
set -o pipefail
# Fail on undeclared variables.
set -u
# Debug, echo every command
#set -x

COMPILE_START_TIME=$(date +%s)

export BUILD_DIR="$1" # for some JS script to read
CACHE_DIR="$2"
ENV_DIR="$3"
BUILDPACK_DIR="$(dirname $(dirname $0))" # for running the JS script

# ========================
# ========================
# ========================

START_TIME=$(date +%s)
echo "       "
echo "1/6--> Installing dependencies"

START_TIME=$(date +%s)
yarn config set cache-folder ${CACHE_DIR} &> /dev/null

echo "       [1/2] root..."
yarn install &> /dev/null || {
  echo "       Failed."
  exit 1
}

echo "       [2/2] apps..."
apps=(core accounts home invest lend trade balance chart)
length=${#apps[@]}

for i in ${!apps[@]}; do
  iapp=${apps[$i]}
  ii=$((i + 1))
  echo "       - [${ii}/${length}] ${iapp}..."
  cd ${BUILD_DIR}/${iapp}
  yarn install &> /dev/null || {
    echo "       Failed."
    exit 1
  }
done

END_TIME=$(date +%s)
echo "       Done in $((END_TIME - START_TIME)) seconds."

# ========================
# ========================
# ========================

echo "       "
echo "2/6--> Exporting ENV for building"
# Support env vars during build:
# * `REACT_APP_*`
#   * https://github.com/facebookincubator/create-react-app/blob/v0.2.3/template/README.md#adding-custom-environment-variables
# * `NODE_*`, especially for `NODE_PATH`
#   * https://github.com/facebookincubator/create-react-app/pull/476
export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}
export_env_dir "$ENV_DIR" '^(REACT_APP_|NODE_|AWS_)'
echo "       Done."

# ========================
# ========================
# ========================

START_TIME=$(date +%s)
echo "       "
echo "3/6--> Building all apps"
node ${BUILDPACK_DIR}/bin/build.js
END_TIME=$(date +%s)
echo "       Done in $((END_TIME - START_TIME)) seconds."

# ========================
# ========================
# ========================

echo "       "
echo "4/6--> Installing awscli"
wget https://s3.amazonaws.com/aws-cli/awscli-bundle.zip --quiet
unzip -qq awscli-bundle.zip
./awscli-bundle/install -b ${BUILD_DIR}/bin/aws &> /dev/null || {
  echo "       Failed."
  exit 1
}
echo "       Done."

# ========================
# ========================
# ========================

echo "       "
echo "5/6--> Syncing to S3 ${AWS_S3_BUCKET}"
echo "       - Syncing different-sized files..."
${BUILD_DIR}/bin/aws s3 sync ${BUILD_DIR}/dist/ s3://${AWS_S3_BUCKET} --delete --size-only --only-show-errors
echo "       - Force syncing */index.html files..."
${BUILD_DIR}/bin/aws s3 sync ${BUILD_DIR}/dist/ s3://${AWS_S3_BUCKET} --exclude "*" --include "*/index.html" --only-show-errors
echo "       Done."

# ========================
# ========================
# ========================
echo "       "
echo "6/6--> Creating CloudFront invalidations"
${BUILD_DIR}/bin/aws configure set preview.cloudfront true
node ${BUILDPACK_DIR}/bin/invalidate-cloudfront.js ${AWS_S3_BUCKET} ${BUILD_DIR} # Auto detect CF distributions to invalidate
echo "       Done."

COMPILE_END_TIME=$(date +%s)
echo "       "
echo "-----> Buildpack done in $((COMPILE_END_TIME - COMPILE_START_TIME)) seconds."
echo "       "
